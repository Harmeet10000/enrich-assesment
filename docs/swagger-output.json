{
  "openapi": "3.0.0",
  "info": {
    "title": "API Gateway for External Data Vendors",
    "version": "1.0.0",
    "description": "A unified API for interacting with various external data vendors, handling rate limiting and asynchronous/synchronous responses."
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Local Development Server"
    }
  ],
  "tags": [
    {
      "name": "Jobs",
      "description": "Operations related to creating and managing vendor jobs."
    },
    {
      "name": "Webhooks",
      "description": "Endpoints for receiving callbacks from asynchronous vendors."
    }
  ],
  "paths": {
    "/api/v1/jobs/post": {
      "post": {
        "tags": ["Jobs"],
        "summary": "Create a new job for vendor processing",
        "description": "Accepts a JSON payload, queues it for background processing by an external vendor, and responds instantly with a unique request ID.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vendorType": {
                    "type": "string",
                    "enum": ["sync", "async"],
                    "description": "Specifies which type of mock vendor to use (synchronous or asynchronous)."
                  },
                  "vendorPayload": {
                    "type": "object",
                    "description": "The actual payload to be sent to the external vendor. Can be any valid JSON.",
                    "example": {
                      "productId": "PROD-ABC-123",
                      "action": "fetch_details"
                    }
                  }
                },
                "required": ["vendorType", "vendorPayload"]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Job accepted for processing. Returns a request ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request_id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier for the created job."
                    }
                  }
                },
                "example": {
                  "request_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request payload.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/v1/jobs/{requestId}": {
      "get": {
        "tags": ["Jobs"],
        "summary": "Get job status and result",
        "description": "Retrieves the current status of a job and its result if processing is complete.",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The unique ID of the job to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "Job status retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": ["pending", "processing", "complete", "failed"],
                      "description": "The current status of the job."
                    },
                    "result": {
                      "type": "object",
                      "description": "The cleaned result data from the vendor (present only if status is 'complete')."
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message if the job failed (present only if status is 'failed')."
                    }
                  },
                  "examples": {
                    "pending": {
                      "value": {
                        "status": "pending"
                      }
                    },
                    "processing": {
                      "value": {
                        "status": "processing"
                      }
                    },
                    "complete": {
                      "value": {
                        "status": "complete",
                        "result": {
                          "vendor": "syncVendor",
                          "data": "Processed sync data for PROD-ABC-123",
                          "timestamp": "2025-07-02T10:00:00.000Z"
                        }
                      }
                    },
                    "failed": {
                      "value": {
                        "status": "failed",
                        "error": "Vendor API returned 500 error."
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Job not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/v1/vendor-webhook/{vendor}": {
      "post": {
        "tags": ["Webhooks"],
        "summary": "Receive webhook from an asynchronous vendor",
        "description": "Endpoint for external asynchronous vendors to push final processed data back to the API Gateway. **Note: This is internally simulated by the async mock vendor, you typically won't call this manually.**",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The name of the vendor sending the webhook (e.g., 'mockAsyncVendor')."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The unique ID of the original job request."
                  },
                  "final_data": {
                    "type": "object",
                    "description": "The final processed data from the vendor.",
                    "example": {
                      "status": "COMPLETED",
                      "reportId": "REPORT-ABC-789",
                      "generatedAt": "2025-07-02T10:30:00Z",
                      "summary": {
                        "totalRecords": 1500
                      }
                    }
                  }
                },
                "required": ["request_id", "final_data"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook processed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "job_id": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid webhook payload."
          },
          "404": {
            "description": "Job not found for webhook update."
          },
          "500": {
            "description": "Internal server error processing webhook."
          }
        }
      }
    }
  }
}
